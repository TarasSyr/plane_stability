import numpy as np
import matplotlib.pyplot as plt
import sympy as sp

# === 1. –°–∏–º–≤–æ–ª—å–Ω–µ —Ä—ñ–≤–Ω—è–Ω–Ω—è —Ä—É—Ö—É –ª—ñ—Ç–∞–∫–∞ ===
m, v, F_thrust, C_d, rho, S, g, alpha = sp.symbols('m v F_thrust C_d rho S g alpha')  # –ó–º—ñ–Ω–∏–≤ a –Ω–∞ alpha

# –°–∏–ª–∞ –æ–ø–æ—Ä—É –ø–æ–≤—ñ—Ç—Ä—è
F_drag = - (1 / 2) * C_d * rho * S * v ** 2
# –°–∏–ª–∞ —Ç—è–∂—ñ–Ω–Ω—è
F_gravity = -m * g * sp.sin(alpha)
# –†—ñ–≤–Ω—è–Ω–Ω—è —Ä—É—Ö—É
eq = sp.Eq(m * sp.Derivative(v), F_thrust + F_drag + F_gravity)

# === 2. –ü—ñ–¥—Å—Ç–∞–≤–ª—è—î–º–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è ===
values = {
    m: 3,  # –º–∞—Å–∞ –ª—ñ—Ç–∞–∫–∞ (–∫–≥)
    F_thrust: 50,  # —Å–∏–ª–∞ —Ç—è–≥–∏ (–ù)
    C_d: 0.03,  # –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –æ–ø–æ—Ä—É
    rho: 1.225,  # –≥—É—Å—Ç–∏–Ω–∞ –ø–æ–≤—ñ—Ç—Ä—è (–∫–≥/–º¬≥)
    S: 0.4,  # –ø–ª–æ—â–∞ –∫—Ä–∏–ª–∞ (–º¬≤)
    g: 9.81,  # –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è –≤—ñ–ª—å–Ω–æ–≥–æ –ø–∞–¥—ñ–Ω–Ω—è (–º/—Å¬≤)
    alpha: 0,  # –∫—É—Ç –Ω–∞—Ö–∏–ª—É —Ç—Ä–∞—î–∫—Ç–æ—Ä—ñ—ó (—Ä–∞–¥—ñ–∞–Ω–∏)
    'v': 20  # –ø–æ—á–∞—Ç–∫–æ–≤–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å (–º/—Å)
}

# –ü—ñ–¥—Å—Ç–∞–≤–ª—è—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ —Ä—ñ–≤–Ω—è–Ω–Ω—è
eq_with_values = eq.subs(values)

# === 3. –í–∏–≤–µ–¥–µ–Ω–Ω—è —Ä—ñ–≤–Ω—è–Ω—å —É LaTeX —Ñ–æ—Ä–º–∞—Ç—ñ ===
print("üìå **–û—Å–Ω–æ–≤–Ω–µ —Ä—ñ–≤–Ω—è–Ω–Ω—è —Ä—É—Ö—É –ª—ñ—Ç–∞–∫–∞:**")
sp.pprint(eq, use_unicode=True)
print("\nüìå **–†—ñ–≤–Ω—è–Ω–Ω—è –ø—ñ—Å–ª—è –ø—ñ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω—å:**")
sp.pprint(eq_with_values, use_unicode=True)

# === 4. –ß–∞—Å–æ–≤–∞ —à–∫–∞–ª–∞ —Ç–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —à–≤–∏–¥–∫–æ—Å—Ç—ñ ===
t = np.linspace(0, 30, 300)  # –ß–∞—Å (–≤—ñ–¥ 0 –¥–æ 30 —Å–µ–∫—É–Ω–¥, 300 —Ç–æ—á–æ–∫)
dt = t[1] - t[0]  # –ö—Ä–æ–∫ —á–∞—Å—É
v = np.zeros_like(t)  # –ú–∞—Å–∏–≤ –¥–ª—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ
a = np.zeros_like(t)  # –ú–∞—Å–∏–≤ –¥–ª—è –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è
v[0] = values['v']  # –ü–æ—á–∞—Ç–∫–æ–≤–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å

# === 5. –ì–µ–Ω–µ—Ä—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—ñ –ø–æ–≤—ñ—Ç—Ä—è–Ω—ñ –ø–æ—Ç–æ–∫–∏ ===
wind_effect = np.random.uniform(-2, 2, size=len(t))  # –¢—É—Ä–±—É–ª–µ–Ω—Ç–Ω—ñ—Å—Ç—å –≤ –º–µ–∂–∞—Ö ¬±2 –º/—Å¬≤

# === 6. –ß–∏—Å–µ–ª—å–Ω–µ —ñ–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è —Ä—ñ–≤–Ω—è–Ω–Ω—è —Ä—É—Ö—É ===
alpha_value = float(values[alpha])  # –û—Ç—Ä–∏–º—É—î–º–æ —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∫—É—Ç–∞

for i in range(1, len(t)):
    F_drag_val = -0.5 * values[C_d] * values[rho] * values[S] * v[i - 1] ** 2
    F_gravity_val = -values[m] * values[g] * np.sin(alpha_value)  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è

    a[i] = (values[F_thrust] + F_drag_val + F_gravity_val) / values[m] + wind_effect[i]
    v[i] = v[i - 1] + a[i] * dt

# === 7. –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤ ===
fig, ax = plt.subplots(2, 1, figsize=(8, 10))

# –ì—Ä–∞—Ñ—ñ–∫ —à–≤–∏–¥–∫–æ—Å—Ç—ñ
ax[0].plot(t, v, label="–®–≤–∏–¥–∫—ñ—Å—Ç—å –ª—ñ—Ç–∞–∫–∞", color="blue")
ax[0].set_xlabel("–ß–∞—Å (—Å)")
ax[0].set_ylabel("–®–≤–∏–¥–∫—ñ—Å—Ç—å (–º/—Å)")
ax[0].set_title("–ó–º—ñ–Ω–∞ —à–≤–∏–¥–∫–æ—Å—Ç—ñ –ª—ñ—Ç–∞–∫–∞ —É —á–∞—Å—ñ (–∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—ñ—Ç—Ä—É)")
ax[0].legend()
ax[0].grid(True)

# –ì—Ä–∞—Ñ—ñ–∫ –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è
ax[1].plot(t, a, label="–ü—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è –ª—ñ—Ç–∞–∫–∞", color="red")
ax[1].set_xlabel("–ß–∞—Å (—Å)")
ax[1].set_ylabel("–ü—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è (–º/—Å¬≤)")
ax[1].set_title("–ó–º—ñ–Ω–∞ –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è —É —á–∞—Å—ñ (–µ—Ñ–µ–∫—Ç —Ç—É—Ä–±—É–ª–µ–Ω—Ç–Ω–æ—Å—Ç—ñ)")
ax[1].legend()
ax[1].grid(True)

plt.tight_layout()
plt.show()